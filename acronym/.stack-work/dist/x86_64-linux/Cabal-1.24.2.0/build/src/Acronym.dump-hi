
==================== FINAL INTERFACE ====================
2017-11-18 14:41:02.174354 UTC

interface acronym-1.1.0.3-8kKn8HxUaFA2OP4vTL8xEJ:Acronym 8002
  interface hash: 7e264764032334a5e193e945b9b9161c
  ABI hash: 04edd0e6781837b096c022c6f00fcb72
  export-list hash: 9dc9209efe601f28997192197433c6cc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Acronym.abbreviate
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
f3260a1ad49a74dc7556a38e443c5c73
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Acronym.$trModule2
                   Acronym.$trModule1) -}
30d2add37d209e940d68f81811a7f99c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Acronym"#) -}
1f3338997d18bc53b4ac35d17ab44c06
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "acronym-1.1.0.3-8kKn8HxUaFA2OP4vTL8xEJ"#) -}
54b8d07e2b360073c59d7cb1271d4263
  abbreviate :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: GHC.Base.String) ->
                 Data.OldList.wordsFB
                   @ [GHC.Types.Char]
                   Acronym.abbreviate2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.map
                      @ GHC.Types.Char
                      @ GHC.Types.Char
                      Acronym.abbreviate1
                      xs)) -}
93bfc2e25a329759314303e91fba4db2
  abbreviate1 :: GHC.Types.Char -> GHC.Types.Char
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (b :: GHC.Types.Char) ->
                 case b of wild { GHC.Types.C# x ->
                 case x of wild1 { DEFAULT -> wild '-'# -> GHC.Types.C# ' '# } }) -}
495d4e8e5614c19d5283c705940a36aa
  abbreviate2 ::
    [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: [GHC.Types.Char])
                   (ys :: [GHC.Types.Char])[OneShot] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Acronym.ilEstChiantCetExercice
                      (GHC.Types.:
                         @ GHC.Types.Char
                         (case x of wild {
                            [] -> case GHC.List.badHead ret_ty GHC.Types.Char of {}
                            : x1 ds1
                            -> case x1 of ww { GHC.Types.C# ww1 ->
                               case {__pkg_ccall base-4.9.1.0 u_towupper GHC.Prim.Int#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Int# #)}
                                      (GHC.Prim.ord# ww1)
                                      GHC.Prim.realWorld# of wild1 { (#,#) ds ds2 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord#
                                         (GHC.Prim.int2Word# ds2)
                                         1114111##) of wild2 {
                                 GHC.Types.False -> GHC.Char.chr2 ds2
                                 GHC.Types.True -> GHC.Types.C# (GHC.Prim.chr# ds2) } } } })
                         (case x of wild {
                            [] -> GHC.List.scanl2 @ GHC.Types.Char : ds1 xs -> xs })))
                   ys) -}
b5f7bf0deb0adce20207291bb4880620
  ilEstChiantCetExercice :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

