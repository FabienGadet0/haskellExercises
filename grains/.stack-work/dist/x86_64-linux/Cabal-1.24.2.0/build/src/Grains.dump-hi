
==================== FINAL INTERFACE ====================
2017-11-18 09:58:05.91891 UTC

interface grains-1.0.0.3-7xsgzqy3DvpDyWN9KcQora:Grains 8002
  interface hash: fcc8cac043db89289aa40264fa8fa257
  ABI hash: b8bfe2fc30aab94768ae735963c32fbb
  export-list hash: 693a167c89be6d41063aa5795a68be11
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Grains.square
  Grains.total
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
08e0c2a4bf8c539a94fcb1556f98622e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Grains.$trModule2
                   Grains.$trModule1) -}
3bc94df1f8e3eaaad716605c00d41355
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Grains"#) -}
7cf4fd4984be78d282ca0a8df5a967c7
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "grains-1.0.0.3-7xsgzqy3DvpDyWN9KcQora"#) -}
ee59596427b6964a618ea2cbbfe959af
  square ::
    GHC.Integer.Type.Integer -> GHC.Base.Maybe GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.gtInteger#
                        n
                        Grains.square4 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.leInteger#
                             n
                             Grains.square3 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> GHC.Base.Just
                             @ GHC.Integer.Type.Integer
                             (GHC.Real.^_$s^
                                Grains.square2
                                (GHC.Integer.Type.minusInteger n Grains.square1))
                        GHC.Types.True -> GHC.Base.Nothing @ GHC.Integer.Type.Integer } }
                   GHC.Types.True
                   -> GHC.Base.Nothing @ GHC.Integer.Type.Integer } }) -}
2fdb638fa283519be104a3dc49c6c1f4
  square1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
a20e6f817e378b131565930945286a0a
  square2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
2a40268e2a05ecefa1d6489f13941ab0
  square3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c43a0c76e15bad0e1db8ccf87273b7ac
  square4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (64) -}
69da72f894c261a315d7e8aa1acd032d
  total :: GHC.Integer.Type.Integer
  {- Unfolding: (Grains.total_go Grains.square1 Grains.square3) -}
502828e4f763c3e409f604f7b68f8e6b
  total_go ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

