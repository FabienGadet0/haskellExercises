
==================== FINAL INTERFACE ====================
2017-11-19 16:00:08.252944 UTC

interface raindrops-1.0.0.3-K9iNzxnbg0cGCEdjNcZAYb:Raindrops 8002
  interface hash: 13c579760c5ccc851d5be544d8d27541
  ABI hash: deb43142099cc4582facba2038256fd4
  export-list hash: 3ea4733798a5bd54e8dd749818a71bba
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Raindrops.convert
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
ce9227882cf37834ce61d30d6b263dc7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Raindrops.$trModule2
                   Raindrops.$trModule1) -}
11fa6a7da459d9720b34b2652fba680a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Raindrops"#) -}
fa40e09e54411252c9bf0dcf07e93b4a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "raindrops-1.0.0.3-K9iNzxnbg0cGCEdjNcZAYb"#) -}
bafbf31be960e9a0f8665290caea83b8
  $wconvert :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   r :: [GHC.Types.Int]
                   = case GHC.Classes.modInt# ww 5# of ww2 {
                       DEFAULT
                       -> case GHC.Classes.modInt# ww 7# of ww1 {
                            DEFAULT -> GHC.Types.[] @ GHC.Types.Int 0# -> Raindrops.convert3 }
                       0#
                       -> GHC.Types.:
                            @ GHC.Types.Int
                            Raindrops.convert2
                            (case GHC.Classes.modInt# ww 7# of ww1 {
                               DEFAULT -> GHC.Types.[] @ GHC.Types.Int
                               0# -> Raindrops.convert3 }) }
                 } in
                 let {
                   r1 :: [GHC.Types.Int]
                   = case GHC.Classes.modInt# ww 3# of ww2 {
                       DEFAULT -> r
                       0# -> GHC.Types.: @ GHC.Types.Int Raindrops.convert1 r }
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Int r1 0# of ww2 {
                   DEFAULT -> Raindrops.convert_go r1
                   0#
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             ww
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
82d0428266efbc37ac82b7dfa338707a
  convert :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Raindrops.$wconvert ww1 }) -}
68a502a2fc5a57b63b34ba05c3716fbb
  convert1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
4ef8ff43e166c3650a8fa7d7a734b0cf
  convert2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
b8ee08075a8755af5e32539d520daf02
  convert3 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Raindrops.convert4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
78e5cb7fed15d3c58abaa53354bfe94f
  convert4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
47b16222f0b95dc8b34b3fc1f3c5d05c
  convert_go :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

